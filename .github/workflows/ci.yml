name: CI Pipeline

on:
  push:
    branches: [main]

jobs:
  test-suite:
    name: Setup & Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Pytest Unit Tests
        run: |
          PYTHONPATH=./ pytest

  train-and-quantize:
    name: Training and Quantize
    needs: test-suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Train Model
        run: PYTHONPATH=. python src/train.py

      - name: Quantize Model
        run: PYTHONPATH=. python src/quantize.py

      - name: Evaluate Trained Model
        run: PYTHONPATH=. python tests/testing.py

      - name: Generate Metrics Report
        run: PYTHONPATH=. python reporting.py

      - name: Upload metrics.json
        uses: actions/upload-artifact@v4
        with:
          name: model-metrics
          path: models/metrics.json

      - name: Upload metrics_plot.png
        uses: actions/upload-artifact@v4
        with:
          name: metrics-visual
          path: models/metrics_plot.png

      - name: Upload quant_metrics.json
        uses: actions/upload-artifact@v4
        with:
          name: quantized-metrics
          path: models/quant_metrics.json

  build-container:
    name: ðŸ”¨ Build Container
    needs: train-and-quantize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t linear-reg-app .

  test-container:
    name: ðŸ§ª Test Container
    needs: build-container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Docker Container
        run: docker run linear-reg-app

  deployment:
    name: ðŸš€ Deployment (DockerHub)
    needs: test-container
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Setup DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Rebuild Docker image
        run: docker build -t linear-reg-app .

      - name: Tag and Push Docker Image
        run: |
          docker tag linear-reg-app ${{ secrets.DOCKER_USERNAME }}/linear-reg-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/linear-reg-app:latest
